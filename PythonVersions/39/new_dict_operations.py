
if __name__ == '__main__':

    '''
    字典合并
    一个非常优雅的特性，当我们想将两个字典进行合并时，只需要使用操作符“|”
    合并成的新字典会包括原来两个字典所有的键与值, 这里需要注意的是，如果两个字典都包含相同的Key，运算结果将直接采用第二个字典的键值对
    '''
    dict_a = {"a": 1, "b": 2, "c": 3}
    dict_b = {"d": 4, "e": 5}
    dict_c = dict_a | dict_b
    print("两个字典合并成为一个新的字典: ", dict_c)

    dict_d = {"a": "a", "f": 6}
    dict_e = dict_c | dict_d
    print("如果被合并的字典中有相同键, 则对应的值取后一个字典中的值: ", dict_e)

    '''
    可迭代对象的字典更新
    通过“|=”操作符可以使用一个可迭代对象的键值对更新字典
    '''
    # 元组
    add_value = ((i, i**2) for i in range(3))
    dict_c |= add_value
    print('通过"|="运算符为字典添加迭代对象(元组)作为新的键与值: ', dict_c)
    # 列表
    add_list = [('spam', 999)]
    dict_b |= add_list
    print('通过"|="运算符为字典添加迭代对象(列表)作为新的键与值: ', dict_b)
    # 当然, 可以是字典, 但用字典更新的话, 效果就与"|"操作符一样
    dict_f = {"f": "b", "g": 7}
    dict_e |= dict_f
    print('通过"|="运算符为字典添加迭代对象(字典)作为新的键与值: ', dict_e)


